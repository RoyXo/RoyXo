Index: text_4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text_4.py b/text_4.py
new file mode 100644
--- /dev/null	(date 1645906726196)
+++ b/text_4.py	(date 1645906726196)
@@ -0,0 +1,5 @@
+4. Программа принимает действительное положительное число x и целое отрицательное число y.
+Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y).
+При решении задания нужно обойтись без встроенной функции возведения числа в степень.
+Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
+Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
\ No newline at end of file
Index: text_3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text_3.py b/text_3.py
new file mode 100644
--- /dev/null	(date 1645906688550)
+++ b/text_3.py	(date 1645906688550)
@@ -0,0 +1,1 @@
+3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
\ No newline at end of file
Index: text_2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text_2.py b/text_2.py
new file mode 100644
--- /dev/null	(date 1645990753753)
+++ b/text_2.py	(date 1645990753753)
@@ -0,0 +1,17 @@
+# 2. Выполнить функцию, которая принимает несколько параметров,
+# описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
+# Функция должна принимать параметры как именованные аргументы.
+# Осуществить вывод данных о пользователе одной строкой.
+
+def profile(**kwargs):
+    return " ".join(kwargs.valeus())
+
+
+print(profile(name=input("enter your name: "),
+              sure_name=input("enter your sure name: "),
+              birth_year=input("enter your year of birth: "),
+              city=input("enter your city: "),
+              e_mail=input("enter your email: "),
+              phon_number=input("enter your phon number: ")))
+
+
Index: text_1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text_1.py b/text_1.py
new file mode 100644
--- /dev/null	(date 1645907757826)
+++ b/text_1.py	(date 1645907757826)
@@ -0,0 +1,14 @@
+# Реализовать функцию, принимающую два числа(позиционные аргументы) и выполняющую их деление.
+# Числа запрашивать упользователя, предусмотреть обработку ситуации деления на ноль.
+
+def division(x, y):
+    try:
+        return int(x) / int(y)
+    except ZerroDivisionError:
+        print("Деление на ноль невозможно!")
+    except ValeuError:
+        print("Введите число!")
+print(division(input("Введите первое значение: "), input("Введите второе значение: ")))
+
+
+
Index: text_7.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text_7.py b/text_7.py
new file mode 100644
--- /dev/null	(date 1645906816926)
+++ b/text_7.py	(date 1645906816926)
@@ -0,0 +1,4 @@
+7. Продолжить работу над заданием. В программу должна попадать строка из слов,
+разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
+Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
+Используйте написанную ранее функцию int_func().
\ No newline at end of file
Index: text_6.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text_6.py b/text_6.py
new file mode 100644
--- /dev/null	(date 1645906816936)
+++ b/text_6.py	(date 1645906816936)
@@ -0,0 +1,3 @@
+6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же,
+но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
+
Index: text_5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text_5.py b/text_5.py
new file mode 100644
--- /dev/null	(date 1645906762826)
+++ b/text_5.py	(date 1645906762826)
@@ -0,0 +1,8 @@
+5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
+При нажатии Enter должна выводиться сумма чисел.
+Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
+
+Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
+Но если вместо числа вводится специальный символ, выполнение программы завершается.
+Если специальный символ введён после нескольких чисел,
+то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
\ No newline at end of file
